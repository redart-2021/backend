# Generated by Django 3.2.7 on 2021-09-03 19:41

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Achievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата-время создания')),
                ('name', models.CharField(max_length=250, verbose_name='Название')),
                ('additional_data', models.JSONField(default=dict, verbose_name='Доп данные')),
                ('description', models.TextField(verbose_name='Описание')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Balance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('additional_data', models.JSONField(default=dict, verbose_name='Доп данные')),
                ('amount', models.PositiveBigIntegerField(verbose_name='Баллы')),
                ('frozen', models.PositiveBigIntegerField(verbose_name='Замороженные баллы')),
            ],
            options={
                'verbose_name': 'Баланс',
                'verbose_name_plural': 'Балансы',
            },
        ),
        migrations.CreateModel(
            name='CommandChallenge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, verbose_name='Название')),
                ('description', models.TextField(verbose_name='Описание')),
                ('start_at', models.DateTimeField(blank=True, null=True, verbose_name='Дата-время начала')),
                ('finish_at', models.DateTimeField(blank=True, null=True, verbose_name='Дата-время конца')),
                ('is_private', models.BooleanField(default=False, verbose_name='Приватное')),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='command_challenges', to=settings.AUTH_USER_MODEL, verbose_name='Создатель')),
            ],
            options={
                'verbose_name': 'Соревнование командное',
                'verbose_name_plural': 'Соревнования командные',
                'default_related_name': 'command_challenges',
            },
        ),
        migrations.CreateModel(
            name='IndividualChallenge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, verbose_name='Название')),
                ('description', models.TextField(verbose_name='Описание')),
                ('start_at', models.DateTimeField(blank=True, null=True, verbose_name='Дата-время начала')),
                ('finish_at', models.DateTimeField(blank=True, null=True, verbose_name='Дата-время конца')),
                ('is_private', models.BooleanField(default=False, verbose_name='Приватное')),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='individual_challenges', to=settings.AUTH_USER_MODEL, verbose_name='Создатель')),
            ],
            options={
                'verbose_name': 'Соревнование индивидуальное',
                'verbose_name_plural': 'Соревнования индивидуальные',
                'default_related_name': 'individual_challenges',
            },
        ),
        migrations.CreateModel(
            name='Quest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата-время создания')),
                ('name', models.CharField(max_length=250, verbose_name='Название')),
                ('additional_data', models.JSONField(default=dict, verbose_name='Доп данные')),
                ('description', models.TextField(verbose_name='Описание')),
                ('reward', models.BigIntegerField(verbose_name='Очки награды')),
                ('valid_from', models.DateTimeField(blank=True, null=True, verbose_name='Действует с')),
                ('valid_to', models.DateTimeField(blank=True, null=True, verbose_name='Действует до')),
            ],
            options={
                'verbose_name': 'Задание',
                'verbose_name_plural': 'Задание',
            },
        ),
        migrations.CreateModel(
            name='RawEventLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата-время создания')),
                ('data', models.JSONField(verbose_name='Данные')),
                ('locked_by', models.CharField(blank=True, max_length=255, null=True, verbose_name='Кем залочен')),
                ('locked_at', models.DateTimeField(blank=True, null=True, verbose_name='Дата-время лока')),
                ('parsed_at', models.DateTimeField(blank=True, null=True, verbose_name='Дата-время обработки')),
            ],
            options={
                'verbose_name': 'Сырой входящий лог',
                'verbose_name_plural': 'Сырые входящие логи',
            },
        ),
        migrations.CreateModel(
            name='UsersCommand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, verbose_name='Название')),
                ('description', models.TextField(verbose_name='Описание')),
                ('users', models.ManyToManyField(blank=True, related_name='users_commands', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Команда (пользователи)',
                'verbose_name_plural': 'Команда (пользователи)',
                'default_related_name': 'users_commands',
            },
        ),
        migrations.CreateModel(
            name='UserEventLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата-время создания')),
                ('parsed_data', models.JSONField(default=dict, verbose_name='Обработанные данные')),
                ('raw_log', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_event_logs', to='main.raweventlog', verbose_name='Сырой лог')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_event_logs', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Лог пользовательских данных',
                'verbose_name_plural': 'Логи пользовательских данных',
                'default_related_name': 'user_event_logs',
            },
        ),
        migrations.CreateModel(
            name='UserBalance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('additional_data', models.JSONField(default=dict, verbose_name='Доп данные')),
                ('balance', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='user_balance', to='main.balance', verbose_name='Баланс')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='user_balance', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Актуальный баланс пользователя',
                'verbose_name_plural': 'Актуальные балансы пользователей',
                'default_related_name': 'user_balance',
            },
        ),
        migrations.CreateModel(
            name='UserAchievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата-время создания')),
                ('achievement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='achievements', to='main.achievement')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='achievements', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Выданное достижение',
                'verbose_name_plural': 'Выданные достижения',
                'default_related_name': 'achievements',
            },
        ),
        migrations.CreateModel(
            name='ScoreLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата-время создания')),
                ('additional_data', models.JSONField(default=dict, verbose_name='Доп данные')),
                ('comment', models.TextField(default='', verbose_name='Коммент')),
                ('score', models.BigIntegerField(verbose_name='Дельта очков')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='score_logs', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Лог рейтинга',
                'verbose_name_plural': 'Логи рейтинга',
                'default_related_name': 'score_logs',
            },
        ),
        migrations.CreateModel(
            name='IndividualChallengeRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата-время создания')),
                ('answer', models.CharField(blank=True, max_length=50, null=True, verbose_name='Ответ')),
                ('answered_at', models.DateTimeField(blank=True, null=True, verbose_name='Дата-время ответа')),
                ('challenge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='individual_challenges_requests', to='main.individualchallenge', verbose_name='Соревновие')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='individual_challenges_requests', to=settings.AUTH_USER_MODEL, verbose_name='Участник')),
            ],
            options={
                'verbose_name': 'Заявка на участие в индивидуальном соревновании',
                'verbose_name_plural': 'Заявки на участие в индивидуальном соревновании',
                'default_related_name': 'individual_challenges_requests',
            },
        ),
        migrations.AddField(
            model_name='individualchallenge',
            name='quest',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='individual_challenges', to='main.quest', verbose_name='Задание'),
        ),
        migrations.CreateModel(
            name='CommandChallengeRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата-время создания')),
                ('answer', models.CharField(blank=True, max_length=50, null=True, verbose_name='Ответ')),
                ('answered_at', models.DateTimeField(blank=True, null=True, verbose_name='Дата-время ответа')),
                ('challenge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='command_challenges_requests', to='main.commandchallenge', verbose_name='Соревновие')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='command_challenges_requests', to='main.userscommand', verbose_name='Участник')),
            ],
            options={
                'verbose_name': 'Заявка на участие в коммандном соревновании',
                'verbose_name_plural': 'Заявки на участие в коммандном соревновании',
                'default_related_name': 'command_challenges_requests',
            },
        ),
        migrations.AddField(
            model_name='commandchallenge',
            name='quest',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='command_challenges', to='main.quest', verbose_name='Задание'),
        ),
        migrations.CreateModel(
            name='CommandBalance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('additional_data', models.JSONField(default=dict, verbose_name='Доп данные')),
                ('balance', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='command_balances', to='main.balance', verbose_name='Баланс')),
                ('command', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='command_balances', to='main.userscommand', verbose_name='Команда')),
            ],
            options={
                'verbose_name': 'Актуальный баланс команды',
                'verbose_name_plural': 'Актуальные баланс команды',
                'default_related_name': 'command_balances',
            },
        ),
        migrations.CreateModel(
            name='BalanceLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата-время создания')),
                ('additional_data', models.JSONField(default=dict, verbose_name='Доп данные')),
                ('comment', models.TextField(default='', verbose_name='Коммент')),
                ('amount', models.BigIntegerField(verbose_name='Дельта общего количество баллов')),
                ('frozen', models.BigIntegerField(verbose_name='Дельта замороженного количество баллов')),
                ('balance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='balance_logs', to='main.balance', verbose_name='Баланс')),
            ],
            options={
                'verbose_name': 'Лог баланса',
                'verbose_name_plural': 'Логи баланса',
                'default_related_name': 'balance_logs',
            },
        ),
    ]
